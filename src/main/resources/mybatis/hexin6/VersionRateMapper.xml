<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hexin.mapper.hexin6.VersionRateMapper">
  <resultMap id="BaseResultMap" type="com.hexin.domain.hexin6.VersionRate">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="month" jdbcType="TINYINT" property="month" />
    <result column="rate" jdbcType="DECIMAL" property="rate" />
    <result column="version_id" jdbcType="INTEGER" property="versionId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, month, rate, version_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from version_rate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from version_rate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hexin.domain.hexin6.VersionRate">
    insert into version_rate (id, month, rate, 
      version_id)
    values (#{id,jdbcType=INTEGER}, #{month,jdbcType=TINYINT}, #{rate,jdbcType=DECIMAL}, 
      #{versionId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hexin.domain.hexin6.VersionRate">
    insert into version_rate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="month != null">
        month,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="versionId != null">
        version_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="month != null">
        #{month,jdbcType=TINYINT},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=DECIMAL},
      </if>
      <if test="versionId != null">
        #{versionId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hexin.domain.hexin6.VersionRate">
    update version_rate
    <set>
      <if test="month != null">
        month = #{month,jdbcType=TINYINT},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=DECIMAL},
      </if>
      <if test="versionId != null">
        version_id = #{versionId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hexin.domain.hexin6.VersionRate">
    update version_rate
    set month = #{month,jdbcType=TINYINT},
      rate = #{rate,jdbcType=DECIMAL},
      version_id = #{versionId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--根据versionId查询梯度利率-->
  <select id="getRateByVersionIdAndMonth"  resultType="java.math.BigDecimal">
    select
      vr.rate
    from version_rate vr
    where vr.version_id = #{versionId,jdbcType=INTEGER}
    and vr.`month` = #{month,jdbcType=TINYINT}
  </select>

  <insert id="batchInsertVersionRate" parameterType="List">
  	insert into version_rate(month,rate,version_id)
		values
		<foreach collection="list" item="item" index="index" separator="," >
			(#{item.month,jdbcType=TINYINT},#{item.rate,jdbcType=DECIMAL},#{item.versionId,jdbcType=INTEGER})
		</foreach>
  </insert>
   
  <select id="getVersionRatesByVersionId" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
  	from version_rate where version_id=#{versionId,jdbcType=INTEGER}
  </select>
</mapper>
